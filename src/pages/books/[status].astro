---
import { getCollection, render } from "astro:content";

import BlogLayout from "../../layouts/BlogLayout.astro";
import ContentBlock from "../../components/ContentBlock.astro";
// import Pagination from "../../components/Pagination.astro";

export async function getStaticPaths() {
	const statusList = [
		'reading',
		'read',
		'unfinished',
	]

	return statusList.map(status => {
		return {
			params: { status },
		};
	});
}

const {status} = Astro.params;

const collection = await getCollection("books")
const shuffledCollection = collection
  .map(value => ({ value, sort: Math.random() }))
  .sort((a, b) => a.sort - b.sort)
  .map(({ value }) => value)
  .filter(book => status === book.data.status);
  
const pageTitle = "books";

const getStatString = status => {
	switch (status) {
		case 'reading':
			return "i'm reading";
		case 'read':
			return "i've read";
		case 'unfinished':
			return "i've left unfinished";
	}
}
---

<BlogLayout pageTitle={pageTitle}>
<ContentBlock title=`here are some books ${getStatString(status)}``>
	  <div class="book-grid">
	  {
		shuffledCollection.map((book) => {
		  const {
			data: { title, author, finished, cover },
			id,
		  } = book;
		  return (
			<div class="book">
			  {cover &&
				<img src={cover}></img>
			  }
			  <div class="insert">
				{title}, by {author}
			  </div>
			</div>
		  );
		})
	  }
	</div>
  </ContentBlock>
</BlogLayout>

<style>
.book-grid {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;

	.book {
		width: 150px;
		min-height: 240px;
		overflow: hidden;
		position: relative;

		img {
		  z-index: 2;
		  position: relative;
		  transition: opacity 0.2s ease-in;
		  width: 100%;
		  height: 100%;
		  object-fit: cover;

		  &:hover {
			opacity: 0;
		  }
		}

		.insert {
			border: 1px solid var(--color-foreground);
			height: 100%;
			padding: 0.5em;
			text-align: center;
			position: absolute;
			top: 0;
			z-index: 1;
			overflow: clip;
		}
	}
}
</style>
